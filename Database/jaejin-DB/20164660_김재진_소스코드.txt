1. 시스템 접속(관리자, 회원의 로그인) 
    private void DB_Link()
        {
            connString = "Provider=OraOLEDB.Oracle;Password=sbvmfhs5;User ID=jaejin";
            connector = new OleDbConnection(connString);
            connector.Open();
        }

 private void Login_Button_Click(object sender, EventArgs e)
        {
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "select identity,name from member where identity = '" + Id_Box.Text + "'and password='" + Pw_Box.Text + "'"; 
            cmd.CommandType = CommandType.Text; 
            cmd.Connection = connector;
            OleDbDataReader read = cmd.ExecuteReader();

            if (read.Read())
            {
                User_Identity = read.GetString(0);
                User_Name = read.GetString(1);
                SetLogin();
            }
            else
            {
                MessageBox.Show("회원정보를 다시 확인해주세요");
            }
            if (User_Identity.Equals("admin"))
            {
                관리자 Admin = new 관리자();
                Admin.Logout += new Move_Data_Zero(this.SetLogout);
                Admin.Show();
                AdminButton.Show();
            }
        }

2. 관리자계정에서 모든 데이터 입력, 수정, 삭제, 검색
   2-1도서

        private void InsertBook_Button_Click(object sender, EventArgs e)
        {
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "select * from book  where isbn  ='" + isbn.Text + "'";
            cmd.CommandType = CommandType.Text;
            cmd.Connection = connector;
            OleDbDataReader read = cmd.ExecuteReader();

            if (read.Read())
            {
                MessageBox.Show("isbn번호가 중복됩니다.");
                BookListUpdate();
                read.Close();
            }
            else
            {
                if (!price.Equals("") && !name.Text.Equals("") && !stock.Text.Equals("") && !isbn.Text.Equals(""))
                {
                    read.Close();
                    cmd.CommandText = "INSERT INTO book  VALUES('" + name.Text + "'," + Int32.Parse(price.Text) + "," + Int32.Parse(stock.Text) + ",'" + isbn.Text + "')";
                    cmd.CommandType = CommandType.Text;
                    cmd.Connection = connector;
                    cmd.ExecuteNonQuery();
                    MessageBox.Show("도서가 등록되었습니다.");
                    BookListUpdate();
                }
                else { MessageBox.Show("입력하지 않은 정보가 있습니다."); BookListUpdate(); }
            }
        }

        private void UpdateBook_Button_Click(object sender, EventArgs e)
        {
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "select * from book  where isbn  ='" + isbn.Text + "'";
            cmd.CommandType = CommandType.Text;
            cmd.Connection = connector;
            OleDbDataReader read = cmd.ExecuteReader();

            if (read.Read())
            {
                read.Close();
                cmd.CommandText = "UPDATE book set name  ='" + name.Text + "',price  ='" + Int32.Parse(price.Text) + "',stock  ='" + Int32.Parse(stock.Text) + "'where isbn   = '" + isbn.Text + "'";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                cmd.ExecuteNonQuery();
                MessageBox.Show("도서정보가 수정되었습니다.");
                BookListUpdate();
                BookListUpdate();
                read.Close();
            }
            else
            {
                MessageBox.Show("등록되지 않은 도서입니다."); BookListUpdate();
            }


        }

        private void DeleteBook_Button_Click(object sender, EventArgs e)
        {
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "DELETE FROM book  WHERE isbn  = '" + isbn.Text + "'";
            cmd.CommandType = CommandType.Text;
            cmd.Connection = connector;
            cmd.ExecuteNonQuery();
            MessageBox.Show("도서가 삭제 되었습니다.");
            isbn.Text = "";
            stock.Text = "";
            name.Text = "";
            price.Text = "";
            BookListUpdate();
        }
  2-2 회원
       회원 검색
        private void MemberUpdate()
        {
            try
            {
                memberInfo.Rows.Clear();
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "select * from member";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                memberInfo.ColumnCount = 7;

                memberInfo.Columns[0].Name = "회원번호";
                memberInfo.Columns[1].Name = "비밀번호";
                memberInfo.Columns[2].Name = "이름";
                memberInfo.Columns[3].Name = "메일";
                memberInfo.Columns[4].Name = "질문";
                memberInfo.Columns[5].Name = "답";
                memberInfo.Columns[6].Name = "핸드폰번호";


                while (read.Read())
                {
                    object[] obj = new object[7]; 

                    for (int i = 0; i < 7; i++)
                    {
                        obj[i] = new object();
                        obj[i] = read.GetValue(i);
                    }
                    memberInfo.Rows.Add(obj); 
                }
                read.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message);
            }
        }
      회원 추가
private void MI_Click(object sender, EventArgs e)
        {
            if (!MIdentity.Text.Equals(""))
            {
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "select identity from member where identity = '" + MIdentity.Text + "'";
                cmd.CommandType = CommandType.Text; 
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                if (!read.Read())
                {
                    read.Close();
                    if (!MIdentity.Text.Equals("") && !MPw.Text.Equals("") && !MName.Text.Equals("") && !ME.Text.Equals("") && !MQ.Text.Equals("") && !MA.Text.Equals("") && !MP.Text.Equals(""))
                    {  
                        cmd.CommandText = "INSERT INTO member VALUES('" + MIdentity.Text + "','" + MPw.Text + "','" + MName.Text + "','" + ME.Text + "','" + MQ.Text + "','" + MA.Text + "','" + MP.Text + "')";
                        cmd.CommandType = CommandType.Text; 
                        cmd.Connection = connector;
                        cmd.ExecuteNonQuery();
                        MemberUpdate();
                    }
                    else
                    {
                        MessageBox.Show("입력하지 않은 정보가 있습니다.");                       
                    }
                }
                else
                {
                    MessageBox.Show("아이디가 중복되었습니다.");
                }
            }
            else
            {
                MessageBox.Show("생성할  아이디를 입력해주세요.");
            }           
        }

  회원 수정

 private void MU_Click(object sender, EventArgs e)
        {
            if (!MIdentity.Text.Equals(""))
            {
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "select identity from member where identity = '" + MIdentity.Text + "'";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                if (read.Read())
                {
                    read.Close();
                    if (!MIdentity.Text.Equals("") && !MPw.Text.Equals("") && !MName.Text.Equals("") && !ME.Text.Equals("") && !MQ.Text.Equals("") && !MA.Text.Equals("") && !MP.Text.Equals(""))
                    {
                        
                        cmd.CommandText = "UPDATE member set password='" + MPw.Text + "',name ='" + MName.Text + "',email ='" + ME.Text + "',question ='" + MQ.Text + "',answer ='" + MA.Text + "',phone ='" + MP.Text + "' where Identity= '" + MIdentity.Text + "'";
                        cmd.CommandType = CommandType.Text;
                        cmd.Connection = connector;
                        cmd.ExecuteNonQuery();
                        MessageBox.Show("회원정보가 수정되었습니다.");
                        MemberUpdate();

                    }
                    else
                    {
                        MessageBox.Show("입력하지 않은 정보가 있습니다.");
                    }
                }
                else MessageBox.Show("존재하지 않은 회원정보 입니다.");               
            }
            else MessageBox.Show("수정할 회원정보를 입력하세요.");
        }

회원 삭제
        private void MD_Click(object sender, EventArgs e)
        {
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "select identity,name from member where identity = '" + MIdentity.Text + "'";
            cmd.CommandType = CommandType.Text; 
            cmd.Connection = connector;
            OleDbDataReader read = cmd.ExecuteReader();

            if (read.Read())
            {
                read.Close();
                cmd.CommandText = "DELETE from member where identity  = '" + MIdentity.Text + "'";
                cmd.CommandType = CommandType.Text;
                cmd.ExecuteNonQuery();
                MessageBox.Show("회원탈퇴가 완료되었습니다.");
                MIdentity.Text = "";
                MPw.Text = "";
                MName.Text = "";
                ME.Text = "";
                MQ.Text = "";
                MA.Text = "";
                MP.Text = "";

                MemberUpdate();
            }
            else MessageBox.Show("존재하지 않는 계정입니다.");
        }

 2-3 구매목록
	 private void OrderListSUpdate()
        {
            try
            {
                OrderListS.Rows.Clear();
                OleDbCommand cmd = new OleDbCommand();
                if (totaldate) 
                { 
                    cmd.CommandText = "select * from purchase";
                }                
                else
                {
                    if (monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") == monthCalendar1.SelectionRange.End.ToString("yyyy-MM-dd"))
                    {
                        cmd.CommandText = "select * from purchase where purchase_date between '" + monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") + "' and '" + monthCalendar1.SelectionRange.End.AddDays(1).ToString("yyyy-MM-dd") + "'";
                    }
                    else
                    {
                        cmd.CommandText = "select * from purchase where purchase_date between '" + monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") + "' and '" + monthCalendar1.SelectionRange.End.ToString("yyyy-MM-dd") + "'";

                    }
                }
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                OrderListS.ColumnCount = 6;

                OrderListS.Columns[0].Name = "주문번호";
                OrderListS.Columns[1].Name = "구매일";
                OrderListS.Columns[2].Name = "총 금액";
                OrderListS.Columns[3].Name = "주문 상태";
                OrderListS.Columns[4].Name = "카드번호";
                OrderListS.Columns[5].Name = "배송지";

                while (read.Read())
                {
                    object[] obj = new object[6];

                    for (int i = 0; i < 6; i++)
                    {
                        obj[i] = new object();
                        if (i == 1) { obj[i] = read.GetValue(i).ToString().Substring(0, 10); }
                        else if (i == 5) { obj[i] = read.GetValue(7); }
                        else { obj[i] = read.GetValue(i); }
                    }
                    OrderListS.Rows.Add(obj);
                }
                read.Close();
                if (totaldate)
                {
                    cmd.CommandText = "select sum(total_price ) from purchase";
                }
                else
                {
                    if (monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") == monthCalendar1.SelectionRange.End.ToString("yyyy-MM-dd"))
                    {
                        cmd.CommandText = "select sum(total_price ) from purchase where purchase_date between '" + monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") + "' and '" + monthCalendar1.SelectionRange.End.AddDays(1).ToString("yyyy-MM-dd") + "'";
                    }
                    else
                    {
                        cmd.CommandText = "select sum (total_price ) from purchase where purchase_date between '" + monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") + "' and '" + monthCalendar1.SelectionRange.End.ToString("yyyy-MM-dd") + "'";

                    }
                }
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                read = cmd.ExecuteReader();
                if (read.Read())
                {
                    SumMoney.Text = read.GetValue(0).ToString();
                }
                read.Close();
                if (totaldate)
                {
                    cmd.CommandText = "select sum(count) from (select code from purchase)  sc,purchase_book pb where sc.code = pb.code";
                }
                else
                {
                    if (monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") == monthCalendar1.SelectionRange.End.ToString("yyyy-MM-dd"))
                    {
                        cmd.CommandText = "select sum(count) from (select code from purchase where purchase_date between '" + monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") + "' and '" + monthCalendar1.SelectionRange.End.AddDays(1).ToString("yyyy-MM-dd") + "') sc, purchase_book pb where sc.code = pb.code";
                    }
                    else
                    {
                        cmd.CommandText = "select sum(count) from (select code from purchase where purchase_date between '" + monthCalendar1.SelectionRange.Start.ToString("yyyy-MM-dd") + "' and '" + monthCalendar1.SelectionRange.End.ToString("yyyy-MM-dd") + "') sc, purchase_book pb where sc.code = pb.code";

                    }
                }
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                read = cmd.ExecuteReader();
                if (read.Read())
                {
                    SumBook.Text = read.GetValue(0).ToString();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message);
            }
        }

3. 회원계정에서 본인의 정보 입력, 검색, 수정, 탈퇴
   3-1입력, 수정
private void MU_Click(object sender, EventArgs e)
        {           
            OleDbCommand cmd = new OleDbCommand();            
            if (!MPw.Text.Equals("") && !MName.Text.Equals("") && !ME.Text.Equals("") && !MQ.Text.Equals("") && !MA.Text.Equals("") && !MP.Text.Equals(""))
            {
                cmd.CommandText = "UPDATE member set password='" + MPw.Text + "',name ='" + MName.Text + "',email ='" + ME.Text + "',question ='" + MQ.Text + "',answer ='" + MA.Text + "',phone ='" + MP.Text + "' where Identity= '" + User_Identity + "'";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                cmd.ExecuteNonQuery();
                MessageBox.Show("회원정보가 수정되었습니다.");
            }
            else
            {
                MessageBox.Show("입력하지 않은 정보가 있습니다.");
            }      
        }
   3-2탈퇴
 private void Widthdraw_Button_Click(object sender, EventArgs e)
        {
        
               if (Confirm_Check.Checked)
            {
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "select identity,name from member where identity = '" + User_Identity + "'and password='" + Pw.Text + "'"; 
                cmd.CommandType = CommandType.Text; 
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();

                if (read.Read())
                {
                    read.Close();
                    cmd.CommandText = "DELETE from member where identity = '" + User_Identity + "'and password='" + Pw.Text + "'";
                    cmd.CommandType = CommandType.Text; 
                    cmd.Connection = connector;
                    cmd.ExecuteNonQuery();
                    this.Hide();
                    Move_State_Logout();
                    MessageBox.Show("회원탈퇴가 완료되었습니다.");
                }
                else
                {
                    MessageBox.Show("비밀번호가 일치 하지 않습니다.");
                }
            }
            else MessageBox.Show("탈퇴안내를 확인해주시고 체크버튼을 눌러주세요.");
            
        }
    3-3검색
 마이페이지 폼에서 버튼으로 구현

4. 회원계정에서 주문입력 및 검색/수정/삭제
   4-1 입력
 private void Purchase_Button_Click(object sender, EventArgs e)
        {
            bool All_seletion = true;
            for (int i = 0; i < BookNum; i++)
            {
                if (BookList.Rows[i].Cells[4].Value.ToString().Equals("미정"))
                {
                    All_seletion = false;
                    break;
                }
            }
            if (All_seletion && S_A && S_C)
            {
                string P_Code;
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "INSERT INTO purchase  VALUES(to_char(sysdate,'yyyymmdd')||to_char(P_N.nextval,'FM000'),sysdate," + Int32.Parse(SumMoney.Text.ToString()) +",'신청','" + Code.Text + "','" + valid_thru.Text.Substring(0, 10) + "','" + type.Text + "','" + Postal_Code.Text + "','" + Basic_Addr.Text + "','" + Detail_Addr.Text + "','" + User_Identity+"')";
                cmd.CommandType = CommandType.Text; 
                cmd.Connection = connector;
                cmd.ExecuteNonQuery();

                cmd.CommandText = "select max(code) from purchase";
                cmd.CommandType = CommandType.Text; 
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                //행 단위로 반복
                if (read.Read())
                {
                    P_Code= read.GetValue(0).ToString();
                    read.Close();
                    for (int i = 0; i < BookNum; i++)
                    {
                        cmd.CommandText = "insert into purchase_book   values('" + Int32.Parse(P_Code) + "','" + BookList.Rows[i].Cells[3].Value.ToString() + "'," + Int32.Parse(BookList.Rows[i].Cells[4].Value.ToString()) + ")";
                        cmd.CommandType = CommandType.Text;
                        cmd.Connection = connector;
                        cmd.ExecuteNonQuery();
                    }
                    if (ToBasket)
                    {
                        cmd.CommandText = "DELETE FROM basket WHERE code  = "+BasketNum;
                        cmd.CommandType = CommandType.Text;
                        cmd.Connection = connector;
                        cmd.ExecuteNonQuery();
                    }
                }
                this.Hide();
                MessageBox.Show("결제가 완료 되었습니다.");
                BookUpdateMain();
            }
            if(!All_seletion) MessageBox.Show("모든 도서의 구매량을 선택해 주세요.");
            if (!S_A) MessageBox.Show("배송지를 선택해 주세요.");
            if (!S_C) MessageBox.Show("결제 카드를 선택해 주세요.");
        }
 4-2검색
 private void OrderListUpdate()
        {
            try
            {
                OrderList.Rows.Clear();
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "select * from purchase  where identity ='" + User_Identity + "'"; 
                cmd.CommandType = CommandType.Text; 
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader(); 
                OrderList.ColumnCount = 6;

                OrderList.Columns[0].Name = "주문번호";
                OrderList.Columns[1].Name = "구매일";
                OrderList.Columns[2].Name = "총 금액";
                OrderList.Columns[3].Name = "주문 상태";
                OrderList.Columns[4].Name = "카드번호";
                OrderList.Columns[5].Name = "배송지";

                //행 단위로 반복
                while (read.Read())
                {
                    object[] obj = new object[6];

                    for (int i = 0; i < 6; i++) 
                    {
                        obj[i] = new object();
                        if (i == 1) { obj[i] = read.GetValue(i).ToString().Substring(0, 10); }
                        else if (i == 5) { obj[i] = read.GetValue(7); }
                        else { obj[i] = read.GetValue(i); }
                    }
                    OrderList.Rows.Add(obj); 
                }
                read.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message); 
            }
        }
 4-3수정 = 7번 수취확인
 4-4삭제 
  private void 주문취소_Click(object sender, EventArgs e)
        {
            if (state.Text.Equals("신청"))
            {
                OleDbCommand cmd = new OleDbCommand();
                OleDbCommand cmd2 = new OleDbCommand();
                cmd.CommandText = "select pb.isbn, book.stock + pb.count from(select isbn, count  from purchase_book where code = '" + code.Text + "') pb, book where book.isbn = pb.isbn";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                while (read.Read())
                {
                    cmd2.CommandText = "update book set stock = " + Int32.Parse(read.GetValue(1).ToString()) + " where isbn = '" + read.GetValue(0).ToString() + "'";
                    cmd2.CommandType = CommandType.Text;
                    cmd2.Connection = connector;
                    cmd2.ExecuteNonQuery();
                }
                read.Close();                
                cmd.CommandText = "DELETE from purchase  where code   = '" + code.Text + "'";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                cmd.ExecuteNonQuery();                                           
                OrderListUpdate();
                MessageBox.Show("주문취소가 완료되었습니다.");
            }
            else
            {
                MessageBox.Show("신청상태만 취소를 할 수 있습니다.");
            }
            purchase_date.Text = "";
            Card.Text = "";
            Addr.Text = "";
            Sum.Text = "";
            state.Text = "";
            Upt();
        }
5. 회원계정에서 장바구니입력/검색/수정/삭제/주문신청
   5-1입력
          OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "insert into basket values(to_char(B_N.nextval,'FM000'),sysdate,'" + User_Identity + "')";
            cmd.CommandType = CommandType.Text;
            cmd.Connection = connector;
            cmd.ExecuteNonQuery();
            BasketListUpdate();
   5-2검색
public void BasketListUpdate()
        {
            Basket_LIst.Rows.Clear();
            Basket_Num.Items.Clear();
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "select * from basket where identity  ='" + User_Identity + "'"; 
            cmd.CommandType = CommandType.Text;
            cmd.Connection = connector;
            OleDbDataReader read = cmd.ExecuteReader();
            Basket_LIst.ColumnCount = 2;
            int j = 0;
       
            Basket_LIst.Columns[0].Name = "장바구니";
            Basket_LIst.Columns[1].Name = "생성일자";
        
            while (read.Read())
            {   
                object[] obj = new object[2];     
                obj[0] = new object();
                obj[1] = new object();
                obj[0] = read.GetValue(0);
                obj[1] = read.GetValue(1).ToString().Substring(0,10);
                Basket_LIst.Rows.Add(obj); 
                Basket_Num.Items.Add(Basket_LIst.Rows[j++].Cells[0].Value.ToString());
                BasketCode = Basket_LIst.Rows[0].Cells[0].Value.ToString();
                Basket_Num.Text = BasketCode;
            }
            
            read.Close();

        }
   5-3수정
  private void Basket_Num_Button_Click(object sender, EventArgs e)
        {
            bool All_seletion = true;
            for(int i = 0; i < BookNum; i++)
            {
                if (BookList.Rows[i].Cells[4].Value.ToString().Equals("미정"))
                {
                    All_seletion = false;
                    break;
                }
            }
            if (All_seletion)
            {
                BasketCode = Basket_Num.Text.ToString();
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "select * from basket_selection  where code  ='" + BasketCode + "'";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                OleDbDataReader read = cmd.ExecuteReader();
                if (read.Read()) { MessageBox.Show("장바구니에 이미 도서가 추가되었습니다.\n새로운 장바구니를 생성해주세요"); }
                else
                {
                    read.Close();
                    for (int i = 0; i < BookNum; i++)
                    {
                        cmd.CommandText = "insert into basket_selection  values('" + Int32.Parse(BasketCode) + "','" + BookList.Rows[i].Cells[3].Value.ToString() + "'," + Int32.Parse(BookList.Rows[i].Cells[4].Value.ToString()) + ")";
                        cmd.CommandType = CommandType.Text;
                        cmd.Connection = connector;
                        cmd.ExecuteNonQuery();
                    }
                }
                Basket_Select_LIst_Update();
            }
            else  MessageBox.Show("모든 도서의 구매량을 선택해 주세요.");

        }
   5-4삭제
   private void Basket_Delete_Button_Click(object sender, EventArgs e)
        {
            OleDbCommand cmd = new OleDbCommand();
            cmd.CommandText = "DELETE FROM basket WHERE identity = '" + User_Identity + "' and code =" + Int32.Parse(BasketCode);
            cmd.CommandType = CommandType.Text; 
            cmd.Connection = connector;
            cmd.ExecuteNonQuery();
            MessageBox.Show("장바구니를 삭제 했습니다.");
            BasketListUpdate();
            Basket_Select_LIst_Update();
        }
   5-5주문신청 = 장바구니에서 바로주문으로 값 전달후 구매
 private void BookListUpdate()
        {
            BookList.ColumnCount = 5;
            BookList.Columns[0].Name = "도서명";
            BookList.Columns[1].Name = "가격";
            BookList.Columns[2].Name = "재고량";
            BookList.Columns[3].Name = "도서번호";
            BookList.Columns[4].Name = "구매량";
            if (ToBasket) 
            {
                OleDbCommand cmd = new OleDbCommand();
                OleDbDataReader read;
                
                for (int i = 0; i < BookNum; i++)
                {
                    cmd.CommandText = "select * from book where isbn  ='" + BookGrid[i].Cells[1].Value.ToString() + "'";
                    cmd.CommandType = CommandType.Text;
                    cmd.Connection = connector;
                    read = cmd.ExecuteReader();
                    while (read.Read()) 
                    {
                        object[] tmp = new object[BookList.ColumnCount];
                        for (int j = 0; j < BookList.ColumnCount - 1; j++)
                        {
                            tmp[j] = new object();
                            tmp[j] = read.GetValue(j);
                        }
                        tmp[BookList.ColumnCount - 1] = BookGrid[i].Cells[2].Value.ToString();
                        BookList.Rows.Add(tmp); 
                    }
                    read.Close();
                }
                int Sum = 0;
                for (int i = 0; i < BookNum; i++)
                {
                    if (!BookList.Rows[i].Cells[4].Value.ToString().Equals("미정"))
                    {
                        Sum += (Int32.Parse(BookList.Rows[i].Cells[1].Value.ToString()) * Int32.Parse(BookList.Rows[i].Cells[4].Value.ToString()));
                    }
                }
                SumMoney.Text = Sum.ToString();
            }
            else
            {
                for (int i = 0; i < BookNum; i++)
                {
                    object[] tmp = new object[BookList.ColumnCount];
                    for (int j = 0; j < BookList.ColumnCount - 1; j++)
                    {
                        tmp[j] = new object();
                        tmp[j] = BookGrid[i].Cells[j].Value.ToString();
                    }
                    tmp[BookList.ColumnCount - 1] = "미정";
                    BookList.Rows.Add(tmp);
                }
            }
        }
6. 관리자계정에서 주문승인처리

       private void OrderList_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex != -1)
            {
                try
                {
                    OleDbCommand cmd = new OleDbCommand();
                    cmd.CommandText = "select * from purchase  where code  ='" + int.Parse(OrderList.Rows[e.RowIndex].Cells[0].Value.ToString()) + "'";
                    cmd.CommandType = CommandType.Text;
                    cmd.Connection = connector;
                    OleDbDataReader read = cmd.ExecuteReader();
                    if (read.Read())
                    {
                        identity.Text = read.GetValue(10).ToString();
                        code.Text = read.GetValue(0).ToString();
                        purchase_date.Text = read.GetValue(1).ToString();
                        Card.Text = read.GetValue(4).ToString() + " " + read.GetValue(5).ToString().Substring(0, 10) + " " + read.GetValue(6).ToString();
                        Addr.Text = read.GetValue(7).ToString() + " " + read.GetValue(8).ToString() + " " + read.GetValue(9).ToString();
                        Sum.Text = read.GetValue(2).ToString();
                        state.Text = read.GetValue(3).ToString();
                    }
                    read.Close();
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Error: " + ex.Message);
                }
            }
        }

7. 회원계정에서 주문에 대한 수취확인

        private void 수취완료_Click(object sender, EventArgs e)
        {
            if (state.Text == "발송")
            {
                OleDbCommand cmd = new OleDbCommand();
                cmd.CommandText = "UPDATE purchase set state ='판매완료' where code  = '" + code.Text + "'";
                cmd.CommandType = CommandType.Text;
                cmd.Connection = connector;
                cmd.ExecuteNonQuery();
                MessageBox.Show("상품을 수령하셨습니다.");
                state.Text = "판매완료";
                OrderListUpdate();
            }
            else
            {
                MessageBox.Show("발송상태만 수취확인을 할 수 있습니다.");
            }
        }


8. 관리자계정에서 회원별 판매이력 검색
  
   개별판매이력조회 st = new 개별판매이력조회();
   this.Move_Data_IdName += new Move_Data_Two(st.Get_IdName);
   Move_Data_IdName(List.Rows[e.RowIndex].Cells[0].Value.ToString(), "admin");
   st.Show();
